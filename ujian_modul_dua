{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "from sqlalchemy import create_engine\n",
    "import pymysql\n",
    "\n",
    "# import library utk memuat graph dgn plotly\n",
    "import plotly.graph_objs as go\n",
    "# import library plotly offline\n",
    "from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n",
    "init_notebook_mode(connected=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code</th>\n",
       "      <th>Name</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Region</th>\n",
       "      <th>SurfaceArea</th>\n",
       "      <th>IndepYear</th>\n",
       "      <th>Population</th>\n",
       "      <th>LifeExpectancy</th>\n",
       "      <th>GNP</th>\n",
       "      <th>GNPOld</th>\n",
       "      <th>LocalName</th>\n",
       "      <th>GovernmentForm</th>\n",
       "      <th>HeadOfState</th>\n",
       "      <th>Capital</th>\n",
       "      <th>Code2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>ABW</td>\n",
       "      <td>Aruba</td>\n",
       "      <td>North America</td>\n",
       "      <td>Caribbean</td>\n",
       "      <td>193.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>103000</td>\n",
       "      <td>78.4</td>\n",
       "      <td>828.0</td>\n",
       "      <td>793.0</td>\n",
       "      <td>Aruba</td>\n",
       "      <td>Nonmetropolitan Territory of The Netherlands</td>\n",
       "      <td>Beatrix</td>\n",
       "      <td>129.0</td>\n",
       "      <td>AW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southern and Central Asia</td>\n",
       "      <td>652090.0</td>\n",
       "      <td>1919.0</td>\n",
       "      <td>22720000</td>\n",
       "      <td>45.9</td>\n",
       "      <td>5976.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Afganistan/Afqanestan</td>\n",
       "      <td>Islamic Emirate</td>\n",
       "      <td>Mohammad Omar</td>\n",
       "      <td>1.0</td>\n",
       "      <td>AF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>AGO</td>\n",
       "      <td>Angola</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Central Africa</td>\n",
       "      <td>1246700.0</td>\n",
       "      <td>1975.0</td>\n",
       "      <td>12878000</td>\n",
       "      <td>38.3</td>\n",
       "      <td>6648.0</td>\n",
       "      <td>7984.0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>Republic</td>\n",
       "      <td>JosÃ© Eduardo dos Santos</td>\n",
       "      <td>56.0</td>\n",
       "      <td>AO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>AIA</td>\n",
       "      <td>Anguilla</td>\n",
       "      <td>North America</td>\n",
       "      <td>Caribbean</td>\n",
       "      <td>96.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8000</td>\n",
       "      <td>76.1</td>\n",
       "      <td>63.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Anguilla</td>\n",
       "      <td>Dependent Territory of the UK</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>62.0</td>\n",
       "      <td>AI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>ALB</td>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Europe</td>\n",
       "      <td>28748.0</td>\n",
       "      <td>1912.0</td>\n",
       "      <td>3401200</td>\n",
       "      <td>71.6</td>\n",
       "      <td>3205.0</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>ShqipÃ«ria</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Rexhep Mejdani</td>\n",
       "      <td>34.0</td>\n",
       "      <td>AL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>234</td>\n",
       "      <td>YEM</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>527968.0</td>\n",
       "      <td>1918.0</td>\n",
       "      <td>18112000</td>\n",
       "      <td>59.8</td>\n",
       "      <td>6041.0</td>\n",
       "      <td>5729.0</td>\n",
       "      <td>Al-Yaman</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Ali Abdallah Salih</td>\n",
       "      <td>1780.0</td>\n",
       "      <td>YE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>235</td>\n",
       "      <td>YUG</td>\n",
       "      <td>Yugoslavia</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Europe</td>\n",
       "      <td>102173.0</td>\n",
       "      <td>1918.0</td>\n",
       "      <td>10640000</td>\n",
       "      <td>72.4</td>\n",
       "      <td>17000.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Jugoslavija</td>\n",
       "      <td>Federal Republic</td>\n",
       "      <td>Vojislav KoÂštunica</td>\n",
       "      <td>1792.0</td>\n",
       "      <td>YU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>236</td>\n",
       "      <td>ZAF</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Southern Africa</td>\n",
       "      <td>1221037.0</td>\n",
       "      <td>1910.0</td>\n",
       "      <td>40377000</td>\n",
       "      <td>51.1</td>\n",
       "      <td>116729.0</td>\n",
       "      <td>129092.0</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Thabo Mbeki</td>\n",
       "      <td>716.0</td>\n",
       "      <td>ZA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>237</td>\n",
       "      <td>ZMB</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Eastern Africa</td>\n",
       "      <td>752618.0</td>\n",
       "      <td>1964.0</td>\n",
       "      <td>9169000</td>\n",
       "      <td>37.2</td>\n",
       "      <td>3377.0</td>\n",
       "      <td>3922.0</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Frederick Chiluba</td>\n",
       "      <td>3162.0</td>\n",
       "      <td>ZM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>238</td>\n",
       "      <td>ZWE</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Eastern Africa</td>\n",
       "      <td>390757.0</td>\n",
       "      <td>1980.0</td>\n",
       "      <td>11669000</td>\n",
       "      <td>37.8</td>\n",
       "      <td>5951.0</td>\n",
       "      <td>8670.0</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Robert G. Mugabe</td>\n",
       "      <td>4068.0</td>\n",
       "      <td>ZW</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>239 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Code          Name      Continent                     Region  SurfaceArea  \\\n",
       "0    ABW         Aruba  North America                  Caribbean        193.0   \n",
       "1    AFG   Afghanistan           Asia  Southern and Central Asia     652090.0   \n",
       "2    AGO        Angola         Africa             Central Africa    1246700.0   \n",
       "3    AIA      Anguilla  North America                  Caribbean         96.0   \n",
       "4    ALB       Albania         Europe            Southern Europe      28748.0   \n",
       "..   ...           ...            ...                        ...          ...   \n",
       "234  YEM         Yemen           Asia                Middle East     527968.0   \n",
       "235  YUG    Yugoslavia         Europe            Southern Europe     102173.0   \n",
       "236  ZAF  South Africa         Africa            Southern Africa    1221037.0   \n",
       "237  ZMB        Zambia         Africa             Eastern Africa     752618.0   \n",
       "238  ZWE      Zimbabwe         Africa             Eastern Africa     390757.0   \n",
       "\n",
       "     IndepYear  Population  LifeExpectancy       GNP    GNPOld  \\\n",
       "0          NaN      103000            78.4     828.0     793.0   \n",
       "1       1919.0    22720000            45.9    5976.0       NaN   \n",
       "2       1975.0    12878000            38.3    6648.0    7984.0   \n",
       "3          NaN        8000            76.1      63.2       NaN   \n",
       "4       1912.0     3401200            71.6    3205.0    2500.0   \n",
       "..         ...         ...             ...       ...       ...   \n",
       "234     1918.0    18112000            59.8    6041.0    5729.0   \n",
       "235     1918.0    10640000            72.4   17000.0       NaN   \n",
       "236     1910.0    40377000            51.1  116729.0  129092.0   \n",
       "237     1964.0     9169000            37.2    3377.0    3922.0   \n",
       "238     1980.0    11669000            37.8    5951.0    8670.0   \n",
       "\n",
       "                 LocalName                                GovernmentForm  \\\n",
       "0                    Aruba  Nonmetropolitan Territory of The Netherlands   \n",
       "1    Afganistan/Afqanestan                               Islamic Emirate   \n",
       "2                   Angola                                      Republic   \n",
       "3                 Anguilla                 Dependent Territory of the UK   \n",
       "4               ShqipÃ«ria                                      Republic   \n",
       "..                     ...                                           ...   \n",
       "234               Al-Yaman                                      Republic   \n",
       "235            Jugoslavija                              Federal Republic   \n",
       "236           South Africa                                      Republic   \n",
       "237                 Zambia                                      Republic   \n",
       "238               Zimbabwe                                      Republic   \n",
       "\n",
       "                  HeadOfState  Capital Code2  \n",
       "0                     Beatrix    129.0    AW  \n",
       "1               Mohammad Omar      1.0    AF  \n",
       "2    JosÃ© Eduardo dos Santos     56.0    AO  \n",
       "3                Elisabeth II     62.0    AI  \n",
       "4              Rexhep Mejdani     34.0    AL  \n",
       "..                        ...      ...   ...  \n",
       "234        Ali Abdallah Salih   1780.0    YE  \n",
       "235       Vojislav KoÂštunica   1792.0    YU  \n",
       "236               Thabo Mbeki    716.0    ZA  \n",
       "237         Frederick Chiluba   3162.0    ZM  \n",
       "238          Robert G. Mugabe   4068.0    ZW  \n",
       "\n",
       "[239 rows x 15 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sqlengine = create_engine('mysql+pymysql://root:admin@127.0.0.1', pool_recycle=3306)\n",
    "dbConnection = sqlengine.connect()\n",
    "dfCountry = pd.read_sql(\"select * from world.country\", dbConnection)\n",
    "dfCountry"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>CountryCode</th>\n",
       "      <th>District</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Kabul</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Kabol</td>\n",
       "      <td>1780000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Qandahar</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Qandahar</td>\n",
       "      <td>237500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Herat</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Herat</td>\n",
       "      <td>186800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Mazar-e-Sharif</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Balkh</td>\n",
       "      <td>127800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>NLD</td>\n",
       "      <td>Noord-Holland</td>\n",
       "      <td>731200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4074</td>\n",
       "      <td>4075</td>\n",
       "      <td>Khan Yunis</td>\n",
       "      <td>PSE</td>\n",
       "      <td>Khan Yunis</td>\n",
       "      <td>123175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4075</td>\n",
       "      <td>4076</td>\n",
       "      <td>Hebron</td>\n",
       "      <td>PSE</td>\n",
       "      <td>Hebron</td>\n",
       "      <td>119401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4076</td>\n",
       "      <td>4077</td>\n",
       "      <td>Jabaliya</td>\n",
       "      <td>PSE</td>\n",
       "      <td>North Gaza</td>\n",
       "      <td>113901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4077</td>\n",
       "      <td>4078</td>\n",
       "      <td>Nablus</td>\n",
       "      <td>PSE</td>\n",
       "      <td>Nablus</td>\n",
       "      <td>100231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4078</td>\n",
       "      <td>4079</td>\n",
       "      <td>Rafah</td>\n",
       "      <td>PSE</td>\n",
       "      <td>Rafah</td>\n",
       "      <td>92020</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4079 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID            Name CountryCode       District  Population\n",
       "0        1           Kabul         AFG          Kabol     1780000\n",
       "1        2        Qandahar         AFG       Qandahar      237500\n",
       "2        3           Herat         AFG          Herat      186800\n",
       "3        4  Mazar-e-Sharif         AFG          Balkh      127800\n",
       "4        5       Amsterdam         NLD  Noord-Holland      731200\n",
       "...    ...             ...         ...            ...         ...\n",
       "4074  4075      Khan Yunis         PSE     Khan Yunis      123175\n",
       "4075  4076          Hebron         PSE         Hebron      119401\n",
       "4076  4077        Jabaliya         PSE     North Gaza      113901\n",
       "4077  4078          Nablus         PSE         Nablus      100231\n",
       "4078  4079           Rafah         PSE          Rafah       92020\n",
       "\n",
       "[4079 rows x 5 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfCity = pd.read_sql(\"select * from world.city\", dbConnection)\n",
    "dfCity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CountryCode</th>\n",
       "      <th>Language</th>\n",
       "      <th>IsOfficial</th>\n",
       "      <th>Percentage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>ABW</td>\n",
       "      <td>Dutch</td>\n",
       "      <td>T</td>\n",
       "      <td>5.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>ABW</td>\n",
       "      <td>English</td>\n",
       "      <td>F</td>\n",
       "      <td>9.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>ABW</td>\n",
       "      <td>Papiamento</td>\n",
       "      <td>F</td>\n",
       "      <td>76.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>ABW</td>\n",
       "      <td>Spanish</td>\n",
       "      <td>F</td>\n",
       "      <td>7.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Balochi</td>\n",
       "      <td>F</td>\n",
       "      <td>0.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>979</td>\n",
       "      <td>ZMB</td>\n",
       "      <td>Tongan</td>\n",
       "      <td>F</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>980</td>\n",
       "      <td>ZWE</td>\n",
       "      <td>English</td>\n",
       "      <td>T</td>\n",
       "      <td>2.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>981</td>\n",
       "      <td>ZWE</td>\n",
       "      <td>Ndebele</td>\n",
       "      <td>F</td>\n",
       "      <td>16.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>982</td>\n",
       "      <td>ZWE</td>\n",
       "      <td>Nyanja</td>\n",
       "      <td>F</td>\n",
       "      <td>2.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>983</td>\n",
       "      <td>ZWE</td>\n",
       "      <td>Shona</td>\n",
       "      <td>F</td>\n",
       "      <td>72.1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>984 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    CountryCode    Language IsOfficial  Percentage\n",
       "0           ABW       Dutch          T         5.3\n",
       "1           ABW     English          F         9.5\n",
       "2           ABW  Papiamento          F        76.7\n",
       "3           ABW     Spanish          F         7.4\n",
       "4           AFG     Balochi          F         0.9\n",
       "..          ...         ...        ...         ...\n",
       "979         ZMB      Tongan          F        11.0\n",
       "980         ZWE     English          T         2.2\n",
       "981         ZWE     Ndebele          F        16.2\n",
       "982         ZWE      Nyanja          F         2.2\n",
       "983         ZWE       Shona          F        72.1\n",
       "\n",
       "[984 rows x 4 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfCountryLanguage = pd.read_sql(\"select * from world.countrylanguage\", dbConnection)\n",
    "dfCountryLanguage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code</th>\n",
       "      <th>Name</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Region</th>\n",
       "      <th>SurfaceArea</th>\n",
       "      <th>IndepYear</th>\n",
       "      <th>Population</th>\n",
       "      <th>LifeExpectancy</th>\n",
       "      <th>GNP</th>\n",
       "      <th>GNPOld</th>\n",
       "      <th>LocalName</th>\n",
       "      <th>GovernmentForm</th>\n",
       "      <th>HeadOfState</th>\n",
       "      <th>Capital</th>\n",
       "      <th>Code2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>38</td>\n",
       "      <td>CCK</td>\n",
       "      <td>Cocos (Keeling) Islands</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>Australia and New Zealand</td>\n",
       "      <td>14.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>600</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cocos (Keeling) Islands</td>\n",
       "      <td>Territory of Australia</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>2317.0</td>\n",
       "      <td>CC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>225</td>\n",
       "      <td>VAT</td>\n",
       "      <td>Holy See (Vatican City State)</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Europe</td>\n",
       "      <td>0.4</td>\n",
       "      <td>1929.0</td>\n",
       "      <td>1000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Santa Sede/CittÃ  del Vaticano</td>\n",
       "      <td>Independent Church State</td>\n",
       "      <td>Johannes Paavali II</td>\n",
       "      <td>3538.0</td>\n",
       "      <td>VA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>157</td>\n",
       "      <td>NIU</td>\n",
       "      <td>Niue</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>Polynesia</td>\n",
       "      <td>260.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Niue</td>\n",
       "      <td>Nonmetropolitan Territory of New Zealand</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>2805.0</td>\n",
       "      <td>NU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>154</td>\n",
       "      <td>NFK</td>\n",
       "      <td>Norfolk Island</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>Australia and New Zealand</td>\n",
       "      <td>36.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Norfolk Island</td>\n",
       "      <td>Territory of Australia</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>2806.0</td>\n",
       "      <td>NF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>71</td>\n",
       "      <td>FLK</td>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>South America</td>\n",
       "      <td>South America</td>\n",
       "      <td>12173.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Falkland Islands</td>\n",
       "      <td>Dependent Territory of the UK</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>763.0</td>\n",
       "      <td>FK</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>209</td>\n",
       "      <td>TKL</td>\n",
       "      <td>Tokelau</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>Polynesia</td>\n",
       "      <td>12.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tokelau</td>\n",
       "      <td>Nonmetropolitan Territory of New Zealand</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>3333.0</td>\n",
       "      <td>TK</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>52</td>\n",
       "      <td>CXR</td>\n",
       "      <td>Christmas Island</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>Australia and New Zealand</td>\n",
       "      <td>135.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Christmas Island</td>\n",
       "      <td>Territory of Australia</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>1791.0</td>\n",
       "      <td>CX</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>189</td>\n",
       "      <td>SJM</td>\n",
       "      <td>Svalbard and Jan Mayen</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Nordic Countries</td>\n",
       "      <td>62422.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3200</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Svalbard og Jan Mayen</td>\n",
       "      <td>Dependent Territory of Norway</td>\n",
       "      <td>Harald V</td>\n",
       "      <td>938.0</td>\n",
       "      <td>SJ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>188</td>\n",
       "      <td>SHN</td>\n",
       "      <td>Saint Helena</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Western Africa</td>\n",
       "      <td>314.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6000</td>\n",
       "      <td>76.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Saint Helena</td>\n",
       "      <td>Dependent Territory of the UK</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>3063.0</td>\n",
       "      <td>SH</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>195</td>\n",
       "      <td>SPM</td>\n",
       "      <td>Saint Pierre and Miquelon</td>\n",
       "      <td>North America</td>\n",
       "      <td>North America</td>\n",
       "      <td>242.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7000</td>\n",
       "      <td>77.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Saint-Pierre-et-Miquelon</td>\n",
       "      <td>Territorial Collectivity of France</td>\n",
       "      <td>Jacques Chirac</td>\n",
       "      <td>3067.0</td>\n",
       "      <td>PM</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Code                           Name      Continent  \\\n",
       "38   CCK        Cocos (Keeling) Islands        Oceania   \n",
       "225  VAT  Holy See (Vatican City State)         Europe   \n",
       "157  NIU                           Niue        Oceania   \n",
       "154  NFK                 Norfolk Island        Oceania   \n",
       "71   FLK               Falkland Islands  South America   \n",
       "209  TKL                        Tokelau        Oceania   \n",
       "52   CXR               Christmas Island        Oceania   \n",
       "189  SJM         Svalbard and Jan Mayen         Europe   \n",
       "188  SHN                   Saint Helena         Africa   \n",
       "195  SPM      Saint Pierre and Miquelon  North America   \n",
       "\n",
       "                        Region  SurfaceArea  IndepYear  Population  \\\n",
       "38   Australia and New Zealand         14.0        NaN         600   \n",
       "225            Southern Europe          0.4     1929.0        1000   \n",
       "157                  Polynesia        260.0        NaN        2000   \n",
       "154  Australia and New Zealand         36.0        NaN        2000   \n",
       "71               South America      12173.0        NaN        2000   \n",
       "209                  Polynesia         12.0        NaN        2000   \n",
       "52   Australia and New Zealand        135.0        NaN        2500   \n",
       "189           Nordic Countries      62422.0        NaN        3200   \n",
       "188             Western Africa        314.0        NaN        6000   \n",
       "195              North America        242.0        NaN        7000   \n",
       "\n",
       "     LifeExpectancy  GNP  GNPOld                       LocalName  \\\n",
       "38              NaN  0.0     NaN         Cocos (Keeling) Islands   \n",
       "225             NaN  9.0     NaN  Santa Sede/CittÃ  del Vaticano   \n",
       "157             NaN  0.0     NaN                            Niue   \n",
       "154             NaN  0.0     NaN                  Norfolk Island   \n",
       "71              NaN  0.0     NaN                Falkland Islands   \n",
       "209             NaN  0.0     NaN                         Tokelau   \n",
       "52              NaN  0.0     NaN                Christmas Island   \n",
       "189             NaN  0.0     NaN           Svalbard og Jan Mayen   \n",
       "188            76.8  0.0     NaN                    Saint Helena   \n",
       "195            77.6  0.0     NaN        Saint-Pierre-et-Miquelon   \n",
       "\n",
       "                               GovernmentForm          HeadOfState  Capital  \\\n",
       "38                     Territory of Australia         Elisabeth II   2317.0   \n",
       "225                  Independent Church State  Johannes Paavali II   3538.0   \n",
       "157  Nonmetropolitan Territory of New Zealand         Elisabeth II   2805.0   \n",
       "154                    Territory of Australia         Elisabeth II   2806.0   \n",
       "71              Dependent Territory of the UK         Elisabeth II    763.0   \n",
       "209  Nonmetropolitan Territory of New Zealand         Elisabeth II   3333.0   \n",
       "52                     Territory of Australia         Elisabeth II   1791.0   \n",
       "189             Dependent Territory of Norway             Harald V    938.0   \n",
       "188             Dependent Territory of the UK         Elisabeth II   3063.0   \n",
       "195        Territorial Collectivity of France       Jacques Chirac   3067.0   \n",
       "\n",
       "    Code2  \n",
       "38     CC  \n",
       "225    VA  \n",
       "157    NU  \n",
       "154    NF  \n",
       "71     FK  \n",
       "209    TK  \n",
       "52     CX  \n",
       "189    SJ  \n",
       "188    SH  \n",
       "195    PM  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Menggunakan Dataframe country, tampilkan 10 (sepuluh) negara dengan populasi terkecil.\n",
    "\n",
    "dfSmallestPopulation= dfCountry[dfCountry['Population'] >= 500]\n",
    "sortCountry = dfSmallestPopulation.drop(dfSmallestPopulation[dfSmallestPopulation.Population.isna() == True].index, axis=0)\n",
    "sortCountry.sort_values('Population').head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CountryCode</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>SGP</td>\n",
       "      <td>4017733.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>HKG</td>\n",
       "      <td>1650316.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>URY</td>\n",
       "      <td>1236000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>GIN</td>\n",
       "      <td>1090610.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>UGA</td>\n",
       "      <td>890800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>SLE</td>\n",
       "      <td>850000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>LBR</td>\n",
       "      <td>850000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>MLI</td>\n",
       "      <td>809552.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>AUS</td>\n",
       "      <td>808119.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>MNG</td>\n",
       "      <td>773700.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Population\n",
       "CountryCode            \n",
       "SGP           4017733.0\n",
       "HKG           1650316.5\n",
       "URY           1236000.0\n",
       "GIN           1090610.0\n",
       "UGA            890800.0\n",
       "SLE            850000.0\n",
       "LBR            850000.0\n",
       "MLI            809552.0\n",
       "AUS            808119.0\n",
       "MNG            773700.0"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Menggunakan Dataframe city, tampilkan 10 (sepuluh) countrycode dengan rata-rata populasi terbesar.\n",
    "mean_dfCity=dfCity.groupby('CountryCode').mean()[['Population']]\n",
    "mean_dfCity.sort_values(['Population'],ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CountryCode</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Language</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>English</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Arabic</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Spanish</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>French</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Chinese</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>German</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Russian</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Italian</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Creole English</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Ful</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                CountryCode\n",
       "Language                   \n",
       "English                  60\n",
       "Arabic                   33\n",
       "Spanish                  28\n",
       "French                   25\n",
       "Chinese                  19\n",
       "German                   19\n",
       "Russian                  17\n",
       "Italian                  15\n",
       "Creole English           14\n",
       "Ful                      12"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Menggunakan Dataframe countrylanguage, tampilkan 10 (sepuluh) bahasa yang paling banyak digunakan di dunia.\n",
    "language = dfCountryLanguage.groupby('Language')\n",
    "language[['CountryCode']].count().sort_values('CountryCode',ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## PIE CHART ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(*args, **kw)>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dfCountry_Sum = dfCountry.groupby('Continent').sum()\n",
    "values = dfCountry_Sum['Population']\n",
    "labels = ['Africa', 'Antartica', 'Asia', 'Europe', 'North America', 'Oceania', 'South America']\n",
    "plt.pie(values, labels = labels, autopct='%1.1f%%', counterclock= False, shadow = True)\n",
    "plt.title('Population of Continent')\n",
    "plt.tight_layout()\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code</th>\n",
       "      <th>Name</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Region</th>\n",
       "      <th>SurfaceArea</th>\n",
       "      <th>IndepYear</th>\n",
       "      <th>Population</th>\n",
       "      <th>LifeExpectancy</th>\n",
       "      <th>GNP</th>\n",
       "      <th>GNPOld</th>\n",
       "      <th>LocalName</th>\n",
       "      <th>GovernmentForm</th>\n",
       "      <th>HeadOfState</th>\n",
       "      <th>Capital</th>\n",
       "      <th>Code2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>41</td>\n",
       "      <td>CHN</td>\n",
       "      <td>China</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Eastern Asia</td>\n",
       "      <td>9572900.0</td>\n",
       "      <td>-1523.0</td>\n",
       "      <td>1277558000</td>\n",
       "      <td>71.4</td>\n",
       "      <td>982268.0</td>\n",
       "      <td>917719.0</td>\n",
       "      <td>Zhongquo</td>\n",
       "      <td>People'sRepublic</td>\n",
       "      <td>Jiang Zemin</td>\n",
       "      <td>1891.0</td>\n",
       "      <td>CN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>99</td>\n",
       "      <td>IND</td>\n",
       "      <td>India</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southern and Central Asia</td>\n",
       "      <td>3287263.0</td>\n",
       "      <td>1947.0</td>\n",
       "      <td>1013662000</td>\n",
       "      <td>62.5</td>\n",
       "      <td>447114.0</td>\n",
       "      <td>430572.0</td>\n",
       "      <td>Bharat/India</td>\n",
       "      <td>Federal Republic</td>\n",
       "      <td>Kocheril Raman Narayanan</td>\n",
       "      <td>1109.0</td>\n",
       "      <td>IN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>98</td>\n",
       "      <td>IDN</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southeast Asia</td>\n",
       "      <td>1904569.0</td>\n",
       "      <td>1945.0</td>\n",
       "      <td>212107000</td>\n",
       "      <td>68.0</td>\n",
       "      <td>84982.0</td>\n",
       "      <td>215002.0</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Abdurrahman Wahid</td>\n",
       "      <td>939.0</td>\n",
       "      <td>ID</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>164</td>\n",
       "      <td>PAK</td>\n",
       "      <td>Pakistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southern and Central Asia</td>\n",
       "      <td>796095.0</td>\n",
       "      <td>1947.0</td>\n",
       "      <td>156483000</td>\n",
       "      <td>61.1</td>\n",
       "      <td>61289.0</td>\n",
       "      <td>58549.0</td>\n",
       "      <td>Pakistan</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Mohammad Rafiq Tarar</td>\n",
       "      <td>2831.0</td>\n",
       "      <td>PK</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21</td>\n",
       "      <td>BGD</td>\n",
       "      <td>Bangladesh</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southern and Central Asia</td>\n",
       "      <td>143998.0</td>\n",
       "      <td>1971.0</td>\n",
       "      <td>129155000</td>\n",
       "      <td>60.2</td>\n",
       "      <td>32852.0</td>\n",
       "      <td>31966.0</td>\n",
       "      <td>Bangladesh</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Shahabuddin Ahmad</td>\n",
       "      <td>150.0</td>\n",
       "      <td>BD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>109</td>\n",
       "      <td>JPN</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Eastern Asia</td>\n",
       "      <td>377829.0</td>\n",
       "      <td>-660.0</td>\n",
       "      <td>126714000</td>\n",
       "      <td>80.7</td>\n",
       "      <td>3787042.0</td>\n",
       "      <td>4192638.0</td>\n",
       "      <td>Nihon/Nippon</td>\n",
       "      <td>Constitutional Monarchy</td>\n",
       "      <td>Akihito</td>\n",
       "      <td>1532.0</td>\n",
       "      <td>JP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>230</td>\n",
       "      <td>VNM</td>\n",
       "      <td>Vietnam</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southeast Asia</td>\n",
       "      <td>331689.0</td>\n",
       "      <td>1945.0</td>\n",
       "      <td>79832000</td>\n",
       "      <td>69.3</td>\n",
       "      <td>21929.0</td>\n",
       "      <td>22834.0</td>\n",
       "      <td>ViÃªt Nam</td>\n",
       "      <td>Socialistic Republic</td>\n",
       "      <td>TrÃ¢n Duc Luong</td>\n",
       "      <td>3770.0</td>\n",
       "      <td>VN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>168</td>\n",
       "      <td>PHL</td>\n",
       "      <td>Philippines</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southeast Asia</td>\n",
       "      <td>300000.0</td>\n",
       "      <td>1946.0</td>\n",
       "      <td>75967000</td>\n",
       "      <td>67.5</td>\n",
       "      <td>65107.0</td>\n",
       "      <td>82239.0</td>\n",
       "      <td>Pilipinas</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Gloria Macapagal-Arroyo</td>\n",
       "      <td>766.0</td>\n",
       "      <td>PH</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>102</td>\n",
       "      <td>IRN</td>\n",
       "      <td>Iran</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southern and Central Asia</td>\n",
       "      <td>1648195.0</td>\n",
       "      <td>1906.0</td>\n",
       "      <td>67702000</td>\n",
       "      <td>69.7</td>\n",
       "      <td>195746.0</td>\n",
       "      <td>160151.0</td>\n",
       "      <td>Iran</td>\n",
       "      <td>Islamic Republic</td>\n",
       "      <td>Ali Mohammad Khatami-Ardakani</td>\n",
       "      <td>1380.0</td>\n",
       "      <td>IR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>215</td>\n",
       "      <td>TUR</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>774815.0</td>\n",
       "      <td>1923.0</td>\n",
       "      <td>66591000</td>\n",
       "      <td>71.0</td>\n",
       "      <td>210721.0</td>\n",
       "      <td>189122.0</td>\n",
       "      <td>TÃ¼rkiye</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Ahmet Necdet Sezer</td>\n",
       "      <td>3358.0</td>\n",
       "      <td>TR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Code         Name Continent                     Region  SurfaceArea  \\\n",
       "41   CHN        China      Asia               Eastern Asia    9572900.0   \n",
       "99   IND        India      Asia  Southern and Central Asia    3287263.0   \n",
       "98   IDN    Indonesia      Asia             Southeast Asia    1904569.0   \n",
       "164  PAK     Pakistan      Asia  Southern and Central Asia     796095.0   \n",
       "21   BGD   Bangladesh      Asia  Southern and Central Asia     143998.0   \n",
       "109  JPN        Japan      Asia               Eastern Asia     377829.0   \n",
       "230  VNM      Vietnam      Asia             Southeast Asia     331689.0   \n",
       "168  PHL  Philippines      Asia             Southeast Asia     300000.0   \n",
       "102  IRN         Iran      Asia  Southern and Central Asia    1648195.0   \n",
       "215  TUR       Turkey      Asia                Middle East     774815.0   \n",
       "\n",
       "     IndepYear  Population  LifeExpectancy        GNP     GNPOld  \\\n",
       "41     -1523.0  1277558000            71.4   982268.0   917719.0   \n",
       "99      1947.0  1013662000            62.5   447114.0   430572.0   \n",
       "98      1945.0   212107000            68.0    84982.0   215002.0   \n",
       "164     1947.0   156483000            61.1    61289.0    58549.0   \n",
       "21      1971.0   129155000            60.2    32852.0    31966.0   \n",
       "109     -660.0   126714000            80.7  3787042.0  4192638.0   \n",
       "230     1945.0    79832000            69.3    21929.0    22834.0   \n",
       "168     1946.0    75967000            67.5    65107.0    82239.0   \n",
       "102     1906.0    67702000            69.7   195746.0   160151.0   \n",
       "215     1923.0    66591000            71.0   210721.0   189122.0   \n",
       "\n",
       "        LocalName           GovernmentForm                    HeadOfState  \\\n",
       "41       Zhongquo         People'sRepublic                    Jiang Zemin   \n",
       "99   Bharat/India         Federal Republic       Kocheril Raman Narayanan   \n",
       "98      Indonesia                 Republic              Abdurrahman Wahid   \n",
       "164      Pakistan                 Republic           Mohammad Rafiq Tarar   \n",
       "21     Bangladesh                 Republic              Shahabuddin Ahmad   \n",
       "109  Nihon/Nippon  Constitutional Monarchy                        Akihito   \n",
       "230     ViÃªt Nam     Socialistic Republic                TrÃ¢n Duc Luong   \n",
       "168     Pilipinas                 Republic        Gloria Macapagal-Arroyo   \n",
       "102          Iran         Islamic Republic  Ali Mohammad Khatami-Ardakani   \n",
       "215      TÃ¼rkiye                 Republic             Ahmet Necdet Sezer   \n",
       "\n",
       "     Capital Code2  \n",
       "41    1891.0    CN  \n",
       "99    1109.0    IN  \n",
       "98     939.0    ID  \n",
       "164   2831.0    PK  \n",
       "21     150.0    BD  \n",
       "109   1532.0    JP  \n",
       "230   3770.0    VN  \n",
       "168    766.0    PH  \n",
       "102   1380.0    IR  \n",
       "215   3358.0    TR  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfCountryAsia = dfCountry[dfCountry['Continent'] == 'Asia'].sort_values(by = 'Population', ascending = False).head(10)\n",
    "dfCountryAsia"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    " \n",
    "# Make fake dataset\n",
    "height = [1277558000, 1013662000, 212107000, 156483000,129155000, 126714000,79832000,75967000,67702000, 66591000]\n",
    "bars = ('China', 'India', 'Indonesia', 'Pakistan', 'Bangladesh', 'Japan', 'Vietnam', 'Philippines', 'Iran', 'Turkey')\n",
    "y_pos = np.arange(len(bars))\n",
    " \n",
    "# Create horizontal bars\n",
    "plt.barh(y_pos, height)\n",
    " \n",
    "# Create names on the y-axis\n",
    "plt.yticks(y_pos, bars)\n",
    " \n",
    "# Show graphic\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(*args, **kw)>"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dfCContinent = dfCountry.sort_values('Population', ascending = False).head(10)\n",
    "\n",
    "plt.figure(figsize=(5, 7))\n",
    "fig = sns.barplot(x = 'Population', y = 'Name', hue = 'Continent', data = dfCContinent)\n",
    "plt.xticks(rotation=90)\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    222.000000\n",
       "mean      66.486036\n",
       "std       11.519267\n",
       "min       37.200000\n",
       "25%       60.300000\n",
       "50%       70.150000\n",
       "75%       75.500000\n",
       "max       83.500000\n",
       "Name: LifeExpectancy, dtype: float64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfCountry.LifeExpectancy.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(dfCountryAsia['LifeExpectancy'], bins=10, kde=False)\n",
    "\n",
    "dfCountryAsia.LifeExpectancy.plot.kde()\n",
    "plt.xlim(0, dfCountryAsia.LifeExpectancy.max())\n",
    "plt.axvline(dfCountryAsia.LifeExpectancy.mean(), color='green', label='LE Mean')\n",
    "plt.axvline(dfCountryAsia.LifeExpectancy.median(), color='red', label='LE Median')\n",
    "plt.axvline(dfCountryAsia.LifeExpectancy.quantile(.25), color='yellow', label='LE Q1')\n",
    "plt.axvline(dfCountryAsia.LifeExpectancy.quantile(.75), color='magenta', label='LE Q2')\n",
    "\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Tidak ada outlier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## GNP per Capita"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code</th>\n",
       "      <th>Name</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Region</th>\n",
       "      <th>SurfaceArea</th>\n",
       "      <th>IndepYear</th>\n",
       "      <th>Population</th>\n",
       "      <th>LifeExpectancy</th>\n",
       "      <th>GNP</th>\n",
       "      <th>GNPOld</th>\n",
       "      <th>LocalName</th>\n",
       "      <th>GovernmentForm</th>\n",
       "      <th>HeadOfState</th>\n",
       "      <th>Capital</th>\n",
       "      <th>Code2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>ABW</td>\n",
       "      <td>Aruba</td>\n",
       "      <td>North America</td>\n",
       "      <td>Caribbean</td>\n",
       "      <td>193.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>103000</td>\n",
       "      <td>78.4</td>\n",
       "      <td>8.280000e+08</td>\n",
       "      <td>793.0</td>\n",
       "      <td>Aruba</td>\n",
       "      <td>Nonmetropolitan Territory of The Netherlands</td>\n",
       "      <td>Beatrix</td>\n",
       "      <td>129.0</td>\n",
       "      <td>AW</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southern and Central Asia</td>\n",
       "      <td>652090.0</td>\n",
       "      <td>1919.0</td>\n",
       "      <td>22720000</td>\n",
       "      <td>45.9</td>\n",
       "      <td>5.976000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Afganistan/Afqanestan</td>\n",
       "      <td>Islamic Emirate</td>\n",
       "      <td>Mohammad Omar</td>\n",
       "      <td>1.0</td>\n",
       "      <td>AF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>AGO</td>\n",
       "      <td>Angola</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Central Africa</td>\n",
       "      <td>1246700.0</td>\n",
       "      <td>1975.0</td>\n",
       "      <td>12878000</td>\n",
       "      <td>38.3</td>\n",
       "      <td>6.648000e+09</td>\n",
       "      <td>7984.0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>Republic</td>\n",
       "      <td>JosÃ© Eduardo dos Santos</td>\n",
       "      <td>56.0</td>\n",
       "      <td>AO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>AIA</td>\n",
       "      <td>Anguilla</td>\n",
       "      <td>North America</td>\n",
       "      <td>Caribbean</td>\n",
       "      <td>96.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8000</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.320000e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Anguilla</td>\n",
       "      <td>Dependent Territory of the UK</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>62.0</td>\n",
       "      <td>AI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>ALB</td>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Europe</td>\n",
       "      <td>28748.0</td>\n",
       "      <td>1912.0</td>\n",
       "      <td>3401200</td>\n",
       "      <td>71.6</td>\n",
       "      <td>3.205000e+09</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>ShqipÃ«ria</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Rexhep Mejdani</td>\n",
       "      <td>34.0</td>\n",
       "      <td>AL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>234</td>\n",
       "      <td>YEM</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>527968.0</td>\n",
       "      <td>1918.0</td>\n",
       "      <td>18112000</td>\n",
       "      <td>59.8</td>\n",
       "      <td>6.041000e+09</td>\n",
       "      <td>5729.0</td>\n",
       "      <td>Al-Yaman</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Ali Abdallah Salih</td>\n",
       "      <td>1780.0</td>\n",
       "      <td>YE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>235</td>\n",
       "      <td>YUG</td>\n",
       "      <td>Yugoslavia</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Europe</td>\n",
       "      <td>102173.0</td>\n",
       "      <td>1918.0</td>\n",
       "      <td>10640000</td>\n",
       "      <td>72.4</td>\n",
       "      <td>1.700000e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Jugoslavija</td>\n",
       "      <td>Federal Republic</td>\n",
       "      <td>Vojislav KoÂštunica</td>\n",
       "      <td>1792.0</td>\n",
       "      <td>YU</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>236</td>\n",
       "      <td>ZAF</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Southern Africa</td>\n",
       "      <td>1221037.0</td>\n",
       "      <td>1910.0</td>\n",
       "      <td>40377000</td>\n",
       "      <td>51.1</td>\n",
       "      <td>1.167290e+11</td>\n",
       "      <td>129092.0</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Thabo Mbeki</td>\n",
       "      <td>716.0</td>\n",
       "      <td>ZA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>237</td>\n",
       "      <td>ZMB</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Eastern Africa</td>\n",
       "      <td>752618.0</td>\n",
       "      <td>1964.0</td>\n",
       "      <td>9169000</td>\n",
       "      <td>37.2</td>\n",
       "      <td>3.377000e+09</td>\n",
       "      <td>3922.0</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Frederick Chiluba</td>\n",
       "      <td>3162.0</td>\n",
       "      <td>ZM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>238</td>\n",
       "      <td>ZWE</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Eastern Africa</td>\n",
       "      <td>390757.0</td>\n",
       "      <td>1980.0</td>\n",
       "      <td>11669000</td>\n",
       "      <td>37.8</td>\n",
       "      <td>5.951000e+09</td>\n",
       "      <td>8670.0</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Robert G. Mugabe</td>\n",
       "      <td>4068.0</td>\n",
       "      <td>ZW</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>239 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Code          Name      Continent                     Region  SurfaceArea  \\\n",
       "0    ABW         Aruba  North America                  Caribbean        193.0   \n",
       "1    AFG   Afghanistan           Asia  Southern and Central Asia     652090.0   \n",
       "2    AGO        Angola         Africa             Central Africa    1246700.0   \n",
       "3    AIA      Anguilla  North America                  Caribbean         96.0   \n",
       "4    ALB       Albania         Europe            Southern Europe      28748.0   \n",
       "..   ...           ...            ...                        ...          ...   \n",
       "234  YEM         Yemen           Asia                Middle East     527968.0   \n",
       "235  YUG    Yugoslavia         Europe            Southern Europe     102173.0   \n",
       "236  ZAF  South Africa         Africa            Southern Africa    1221037.0   \n",
       "237  ZMB        Zambia         Africa             Eastern Africa     752618.0   \n",
       "238  ZWE      Zimbabwe         Africa             Eastern Africa     390757.0   \n",
       "\n",
       "     IndepYear  Population  LifeExpectancy           GNP    GNPOld  \\\n",
       "0          NaN      103000            78.4  8.280000e+08     793.0   \n",
       "1       1919.0    22720000            45.9  5.976000e+09       NaN   \n",
       "2       1975.0    12878000            38.3  6.648000e+09    7984.0   \n",
       "3          NaN        8000            76.1  6.320000e+07       NaN   \n",
       "4       1912.0     3401200            71.6  3.205000e+09    2500.0   \n",
       "..         ...         ...             ...           ...       ...   \n",
       "234     1918.0    18112000            59.8  6.041000e+09    5729.0   \n",
       "235     1918.0    10640000            72.4  1.700000e+10       NaN   \n",
       "236     1910.0    40377000            51.1  1.167290e+11  129092.0   \n",
       "237     1964.0     9169000            37.2  3.377000e+09    3922.0   \n",
       "238     1980.0    11669000            37.8  5.951000e+09    8670.0   \n",
       "\n",
       "                 LocalName                                GovernmentForm  \\\n",
       "0                    Aruba  Nonmetropolitan Territory of The Netherlands   \n",
       "1    Afganistan/Afqanestan                               Islamic Emirate   \n",
       "2                   Angola                                      Republic   \n",
       "3                 Anguilla                 Dependent Territory of the UK   \n",
       "4               ShqipÃ«ria                                      Republic   \n",
       "..                     ...                                           ...   \n",
       "234               Al-Yaman                                      Republic   \n",
       "235            Jugoslavija                              Federal Republic   \n",
       "236           South Africa                                      Republic   \n",
       "237                 Zambia                                      Republic   \n",
       "238               Zimbabwe                                      Republic   \n",
       "\n",
       "                  HeadOfState  Capital Code2  \n",
       "0                     Beatrix    129.0    AW  \n",
       "1               Mohammad Omar      1.0    AF  \n",
       "2    JosÃ© Eduardo dos Santos     56.0    AO  \n",
       "3                Elisabeth II     62.0    AI  \n",
       "4              Rexhep Mejdani     34.0    AL  \n",
       "..                        ...      ...   ...  \n",
       "234        Ali Abdallah Salih   1780.0    YE  \n",
       "235       Vojislav KoÂštunica   1792.0    YU  \n",
       "236               Thabo Mbeki    716.0    ZA  \n",
       "237         Frederick Chiluba   3162.0    ZM  \n",
       "238          Robert G. Mugabe   4068.0    ZW  \n",
       "\n",
       "[239 rows x 15 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfCountry['GNP'] = dfCountry['GNP'].apply(lambda x: x*1000000)\n",
    "dfCountry"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Code</th>\n",
       "      <th>Name</th>\n",
       "      <th>Continent</th>\n",
       "      <th>Region</th>\n",
       "      <th>SurfaceArea</th>\n",
       "      <th>IndepYear</th>\n",
       "      <th>Population</th>\n",
       "      <th>LifeExpectancy</th>\n",
       "      <th>GNP</th>\n",
       "      <th>GNPOld</th>\n",
       "      <th>LocalName</th>\n",
       "      <th>GovernmentForm</th>\n",
       "      <th>HeadOfState</th>\n",
       "      <th>Capital</th>\n",
       "      <th>Code2</th>\n",
       "      <th>GNPperCapita</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>ABW</td>\n",
       "      <td>Aruba</td>\n",
       "      <td>North America</td>\n",
       "      <td>Caribbean</td>\n",
       "      <td>193.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>103000</td>\n",
       "      <td>78.4</td>\n",
       "      <td>8.280000e+08</td>\n",
       "      <td>793.0</td>\n",
       "      <td>Aruba</td>\n",
       "      <td>Nonmetropolitan Territory of The Netherlands</td>\n",
       "      <td>Beatrix</td>\n",
       "      <td>129.0</td>\n",
       "      <td>AW</td>\n",
       "      <td>8.038835e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Southern and Central Asia</td>\n",
       "      <td>652090.0</td>\n",
       "      <td>1919.0</td>\n",
       "      <td>22720000</td>\n",
       "      <td>45.9</td>\n",
       "      <td>5.976000e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Afganistan/Afqanestan</td>\n",
       "      <td>Islamic Emirate</td>\n",
       "      <td>Mohammad Omar</td>\n",
       "      <td>1.0</td>\n",
       "      <td>AF</td>\n",
       "      <td>2.630282e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>AGO</td>\n",
       "      <td>Angola</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Central Africa</td>\n",
       "      <td>1246700.0</td>\n",
       "      <td>1975.0</td>\n",
       "      <td>12878000</td>\n",
       "      <td>38.3</td>\n",
       "      <td>6.648000e+09</td>\n",
       "      <td>7984.0</td>\n",
       "      <td>Angola</td>\n",
       "      <td>Republic</td>\n",
       "      <td>JosÃ© Eduardo dos Santos</td>\n",
       "      <td>56.0</td>\n",
       "      <td>AO</td>\n",
       "      <td>5.162292e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>AIA</td>\n",
       "      <td>Anguilla</td>\n",
       "      <td>North America</td>\n",
       "      <td>Caribbean</td>\n",
       "      <td>96.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8000</td>\n",
       "      <td>76.1</td>\n",
       "      <td>6.320000e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Anguilla</td>\n",
       "      <td>Dependent Territory of the UK</td>\n",
       "      <td>Elisabeth II</td>\n",
       "      <td>62.0</td>\n",
       "      <td>AI</td>\n",
       "      <td>7.900000e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>ALB</td>\n",
       "      <td>Albania</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Europe</td>\n",
       "      <td>28748.0</td>\n",
       "      <td>1912.0</td>\n",
       "      <td>3401200</td>\n",
       "      <td>71.6</td>\n",
       "      <td>3.205000e+09</td>\n",
       "      <td>2500.0</td>\n",
       "      <td>ShqipÃ«ria</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Rexhep Mejdani</td>\n",
       "      <td>34.0</td>\n",
       "      <td>AL</td>\n",
       "      <td>9.423145e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>234</td>\n",
       "      <td>YEM</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>527968.0</td>\n",
       "      <td>1918.0</td>\n",
       "      <td>18112000</td>\n",
       "      <td>59.8</td>\n",
       "      <td>6.041000e+09</td>\n",
       "      <td>5729.0</td>\n",
       "      <td>Al-Yaman</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Ali Abdallah Salih</td>\n",
       "      <td>1780.0</td>\n",
       "      <td>YE</td>\n",
       "      <td>3.335358e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>235</td>\n",
       "      <td>YUG</td>\n",
       "      <td>Yugoslavia</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Southern Europe</td>\n",
       "      <td>102173.0</td>\n",
       "      <td>1918.0</td>\n",
       "      <td>10640000</td>\n",
       "      <td>72.4</td>\n",
       "      <td>1.700000e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Jugoslavija</td>\n",
       "      <td>Federal Republic</td>\n",
       "      <td>Vojislav KoÂštunica</td>\n",
       "      <td>1792.0</td>\n",
       "      <td>YU</td>\n",
       "      <td>1.597744e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>236</td>\n",
       "      <td>ZAF</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Southern Africa</td>\n",
       "      <td>1221037.0</td>\n",
       "      <td>1910.0</td>\n",
       "      <td>40377000</td>\n",
       "      <td>51.1</td>\n",
       "      <td>1.167290e+11</td>\n",
       "      <td>129092.0</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Thabo Mbeki</td>\n",
       "      <td>716.0</td>\n",
       "      <td>ZA</td>\n",
       "      <td>2.890978e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>237</td>\n",
       "      <td>ZMB</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Eastern Africa</td>\n",
       "      <td>752618.0</td>\n",
       "      <td>1964.0</td>\n",
       "      <td>9169000</td>\n",
       "      <td>37.2</td>\n",
       "      <td>3.377000e+09</td>\n",
       "      <td>3922.0</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Frederick Chiluba</td>\n",
       "      <td>3162.0</td>\n",
       "      <td>ZM</td>\n",
       "      <td>3.683062e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>238</td>\n",
       "      <td>ZWE</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Eastern Africa</td>\n",
       "      <td>390757.0</td>\n",
       "      <td>1980.0</td>\n",
       "      <td>11669000</td>\n",
       "      <td>37.8</td>\n",
       "      <td>5.951000e+09</td>\n",
       "      <td>8670.0</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>Republic</td>\n",
       "      <td>Robert G. Mugabe</td>\n",
       "      <td>4068.0</td>\n",
       "      <td>ZW</td>\n",
       "      <td>5.099837e+08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>239 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Code          Name      Continent                     Region  SurfaceArea  \\\n",
       "0    ABW         Aruba  North America                  Caribbean        193.0   \n",
       "1    AFG   Afghanistan           Asia  Southern and Central Asia     652090.0   \n",
       "2    AGO        Angola         Africa             Central Africa    1246700.0   \n",
       "3    AIA      Anguilla  North America                  Caribbean         96.0   \n",
       "4    ALB       Albania         Europe            Southern Europe      28748.0   \n",
       "..   ...           ...            ...                        ...          ...   \n",
       "234  YEM         Yemen           Asia                Middle East     527968.0   \n",
       "235  YUG    Yugoslavia         Europe            Southern Europe     102173.0   \n",
       "236  ZAF  South Africa         Africa            Southern Africa    1221037.0   \n",
       "237  ZMB        Zambia         Africa             Eastern Africa     752618.0   \n",
       "238  ZWE      Zimbabwe         Africa             Eastern Africa     390757.0   \n",
       "\n",
       "     IndepYear  Population  LifeExpectancy           GNP    GNPOld  \\\n",
       "0          NaN      103000            78.4  8.280000e+08     793.0   \n",
       "1       1919.0    22720000            45.9  5.976000e+09       NaN   \n",
       "2       1975.0    12878000            38.3  6.648000e+09    7984.0   \n",
       "3          NaN        8000            76.1  6.320000e+07       NaN   \n",
       "4       1912.0     3401200            71.6  3.205000e+09    2500.0   \n",
       "..         ...         ...             ...           ...       ...   \n",
       "234     1918.0    18112000            59.8  6.041000e+09    5729.0   \n",
       "235     1918.0    10640000            72.4  1.700000e+10       NaN   \n",
       "236     1910.0    40377000            51.1  1.167290e+11  129092.0   \n",
       "237     1964.0     9169000            37.2  3.377000e+09    3922.0   \n",
       "238     1980.0    11669000            37.8  5.951000e+09    8670.0   \n",
       "\n",
       "                 LocalName                                GovernmentForm  \\\n",
       "0                    Aruba  Nonmetropolitan Territory of The Netherlands   \n",
       "1    Afganistan/Afqanestan                               Islamic Emirate   \n",
       "2                   Angola                                      Republic   \n",
       "3                 Anguilla                 Dependent Territory of the UK   \n",
       "4               ShqipÃ«ria                                      Republic   \n",
       "..                     ...                                           ...   \n",
       "234               Al-Yaman                                      Republic   \n",
       "235            Jugoslavija                              Federal Republic   \n",
       "236           South Africa                                      Republic   \n",
       "237                 Zambia                                      Republic   \n",
       "238               Zimbabwe                                      Republic   \n",
       "\n",
       "                  HeadOfState  Capital Code2  GNPperCapita  \n",
       "0                     Beatrix    129.0    AW  8.038835e+09  \n",
       "1               Mohammad Omar      1.0    AF  2.630282e+08  \n",
       "2    JosÃ© Eduardo dos Santos     56.0    AO  5.162292e+08  \n",
       "3                Elisabeth II     62.0    AI  7.900000e+09  \n",
       "4              Rexhep Mejdani     34.0    AL  9.423145e+08  \n",
       "..                        ...      ...   ...           ...  \n",
       "234        Ali Abdallah Salih   1780.0    YE  3.335358e+08  \n",
       "235       Vojislav KoÂštunica   1792.0    YU  1.597744e+09  \n",
       "236               Thabo Mbeki    716.0    ZA  2.890978e+09  \n",
       "237         Frederick Chiluba   3162.0    ZM  3.683062e+08  \n",
       "238          Robert G. Mugabe   4068.0    ZW  5.099837e+08  \n",
       "\n",
       "[239 rows x 16 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfCountry['GNPperCapita'] = dfCountry['GNP']*1000000 / dfCountry['Population']\n",
    "dfCountry\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "def percapita(GNP, POP):\n",
    "    return GNP / POP\n",
    "GNPperCapita = percapita(dfCountry['GNP'], dfCountry['Population'])\n",
    "dfCountry['GNPperCapita'] = GNPperCapita\n",
    "\n",
    "dfCountry['GNP'] = dfCountry['GNP'].apply(lambda x: x*1000000)\n",
    "def percapita(GNP, POP):\n",
    "    return GNP / POP\n",
    "GNPperCapita = percapita(dfCountry['GNP'], dfCountry['Population'])\n",
    "dfCountry['GNPperCapita'] = GNPperCapita"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GNPperCapita</th>\n",
       "      <th>LifeExpectancy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>GNPperCapita</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>0.54425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>LifeExpectancy</td>\n",
       "      <td>0.54425</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                GNPperCapita  LifeExpectancy\n",
       "GNPperCapita         1.00000         0.54425\n",
       "LifeExpectancy       0.54425         1.00000"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corr_dist = dfCountry[['GNPperCapita', 'LifeExpectancy']].corr()\n",
    "corr_dist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.JointGrid at 0x1cc0b6f2588>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.jointplot(x=dfCountry['GNPperCapita'], y= dfCountry['LifeExpectancy'],data=dfCountry,kind='reg') #plot in the right side"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.JointGrid at 0x1cc0a4ec508>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.jointplot(x=dfCountry['GNPperCapita'], y= dfCountry['LifeExpectancy'],data=dfCountry,kind='hex') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1cc0b655b88>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(corr_dist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# GNPperCapita dan LifeExpectancy are positive lineary correlated, berarti jika GNPperCapita tinggi maka life expectancy akan tinggi juga."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
